import random
from django.http import HttpResponse
from django.template import loader
from django.core.paginator import Paginator, EmptyPage, PageNotAnInteger
from django.template import *
from ask.models import Question, Profile, Answer, LikeToQuestion, LikeToAnswer, Tag

def helloworld(request):
    output = '<h2>Hello World!</h2>'
    if request.method == 'GET':
        if len(request.GET):
            output += '<b>GET request data</b>: <br>'
            for data in request.GET:
                output += data
                output += ' = '
                output += request.GET[data]
                output += '<br>'
    if request.method == 'POST':
        output += '<b>POST request data</b>: <br>'
        for data in request.POST:
            output += data
            output += ' = '
            output += request.POST[data]
            output += '<br>'
    return HttpResponse(output)

def paginate(blocks, blocks_on_page, cur_page):
    paginator = Paginator(blocks, blocks_on_page)
    try:
        current_page = int(cur_page)
    except ValueError:
        current_page = 1

    if (current_page > paginator.num_pages):
        current_page = paginator.num_pages

    first_index = 0 if (paginator.num_pages <= 5 or current_page <= 3) else current_page - 3
    last_index = paginator.num_pages if (paginator.num_pages <= 5 or paginator.num_pages - 2 <= current_page) else current_page + 2
    page_range = paginator.page_range[first_index:last_index]
    print(page_range)
    return paginator.page(current_page), page_range

def index(request, page=1):
    template = loader.get_template('newquestionslist.html')
    questions, page_range = paginate(getquestions(), 4, page)
    context = {
        "request" : request,
        "questions" : questions,
        "page_range" : page_range,
    }
    return HttpResponse(template.render(context))

def hot(request, page=1):
    template = loader.get_template('newquestionslist.html')
    questionObjs = Question.objects.list_hot()
    questions, page_range = paginate(questionObjs, 4, page)
    context = {
        "request" : request,
        "questions" : questions,
        "page_range" : page_range,
    }
    return HttpResponse(template.render(context))

def tag(request, tagname, page=1):
    template = loader.get_template('tag.html')
    questions, page_range = paginate(getquestions(), 4, page)
    context = {
        "request" : request,
        "questions" : questions,
        "page_range" : page_range,
    }
    return HttpResponse(template.render(context))

def question(request, qid):
    q = {
    'title': 'How to build a moon park?',
    'id': 1,
    'text': 'Guys, I have trouble with a moon park. <br> Can\'t find the black-jack...',
    'answers': random.randint(0, 30),
    'tags': {'blackjack', 'bender'},
    }
    template = loader.get_template('question.html')
    context = {
    "request" : request,
    "question" : q,
    }
    return HttpResponse(template.render(context))

def settings(request):
    template = loader.get_template('settings.html')
    context = {"request" : request}
    return HttpResponse(template.render(context))

def login(request):
    template = loader.get_template('login.html')
    context = {"request" : request}
    return HttpResponse(template.render(context))

def signup(request):
    template = loader.get_template('signup.html')
    context = {"request" : request}
    return HttpResponse(template.render(context))

def ask(request):
    template = loader.get_template('ask.html')
    context = {"request" : request}
    return HttpResponse(template.render(context))
